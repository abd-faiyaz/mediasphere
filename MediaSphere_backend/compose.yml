services:
  # reverse-proxy:
  #   image: traefik:v3.4
  #   command:
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
  #     - "--certificatesresolvers.myresolver.acme.email=sadatulislamsadi@gmail.com"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - letsencrypt:/letsencrypt
  #   networks:
  #     - host_network
      
  db:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=db_408
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "software" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - host_network
  # watchtower:
  #   image: containrrr/watchtower
  #   command:
  #     - "--label-enable"
  #     - "--interval"
  #     - "30"
  #     - "--rolling-restart"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ~/.docker/config.json:/config.json:ro
  #   environment:
  #     - REPO_USER=Sadatul
  #     - REPO_PASS=${GIT_REGISTRY_TOKEN}
  #   networks:
  #     - host_network
  backend:
    depends_on:
      db:
        condition: service_healthy
    image: abdfaiyaz/ms:0.0.2-SNAPSHOT
    environment:
      - DB_URL=db:5432/db_408
    networks:
      - host_network

networks:
  host_network:

volumes:
  postgres-data: